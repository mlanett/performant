#!/usr/bin/env ruby
# -*- encoding: utf-8 -*-

require "bundler/setup"

require "performant"
require "performant/utilities/task"
require "performant/utilities/bells"

class Generator < Performant::Utilities::Task

  DAY = 86400

  option "p", :processes, default: 100_000, explain: "Processes per cycle"
  option "d", :days,      default: 2
  option "t", :duration,  default: 30,      explain: "Duration of a single process"
  option "D", :day,       default: 86_400,  explain: "Length of a single day"

  def rand
    @rand ||= Performant::Utilities::Bells.new
    @rand.rand
  end

  def run
    # distribute p processes over each of d days.
    # the activity level for a day peaks in the middle
    
    events = []

    (0...days).each do |day|
      processes.times do
        t = ( rand + day ) * DAY
        d = duration * rand # TODO use long tail distribution
        events << [ t.to_i, d.to_i ]
      end
    end

    events = events.sort_by { |i| i.first }
    events.each { |i| printf "%i,%i\n", i.first, i.last }
  end

end # Generator

Generator.parse(ARGV).run if __FILE__ == $0
