#!/usr/bin/env ruby
# -*- encoding: utf-8 -*-

require "bundler/setup"

require "performant"
require "performant/utilities/task"

class Sampler < Performant::Utilities::Task

  option "e", "environment",  default: "development"
  option "c", "config",       default: File.expand_path( "../example.yml", __FILE__ )
  option "j", "jobs"

  def run
    Performant::Configuration.load! src: self.config, env: self.environment

    self.jobs ||= [ "stress", "fake" ]

    sampler     = Performant.sampler
    sec_samples = Hash.new { { jobs: 0, busy: 0, work: 0 } }

    sampler.loop_until_false do

      puts Time.now
      my.jobs.each do |job|

        storage     = Performant.storage(job)
        last_sample = sec_samples[job]
        now_sample  = storage.robustly { storage.tick! }
        diff        = sampler.diff( now_sample, last_sample )
        puts diff.merge( job: job ).inspect

        sec_samples[job] = now_sample
      end
      true
    end
  end
end

Sampler.parse(ARGV).run if __FILE__ == $0
